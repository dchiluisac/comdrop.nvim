*comdrop.txt*    For Neovim version 0.5                  Last change: 2022 Dec 27
==============================================================================
INTRODUCTION                                     *comdrop* *compdrop-introduction*

Comdrop is a plugin allowing you to simple and fast access to commands set by 
you as well as commands defined by other plugins in neovim.
Just press a key and find the command you need.

==============================================================================
REQUIREMENTS                                              *comdrop-requirements*

Comdrop works only with Neovim and was written with Neovim-0.5, so it is highly
recommended to use Neovim version 0.5+.

Comdrop uses |plenary.path|.
==============================================================================
USAGE                                                            *comdrop-usage*

Before doing anything else, you have to setup the plugin. 
You need to call the |comdrop.setup| function to correctly initialize the plugin.

For a minimal setup:

    For people using init.lua~
        In your `init.lua`, add:
>
            require('comdrop').setup()
<
    For people using init.vim~
        In your `init.vim`, add:
>
            lua << EOF
            require('comdrop').setup()
            EOF
<
You can pass an optional argument to `setup(opts)` in order to pass {opts}.
Have a look at |comdrop.setup| for further details.

Commands~

You can try this command by typing it in your command line. 
By default, they will use the default options, if you want to customize how 
those commands work, have a look at |comdrop.setup|

`:ComDrop`                                                           *:ComDrop*
    

`comdrop.setup(`{opts}`)`                                         *comdrop.setup*
    Setup the library with options.

    This function will setup the Lua API and commands in a way that respects
    the options you pass. It is mandatory to call that function at some time
    if you want to be able to use Comdrop.

    Arguments:~
        {opts}  List of options. See the |comdrop-config| section.

    * listCommands {list}: this function expects a list of custom commands, 
    these will  be added to the system commands. If you want to keep only
    custom commands, you can set the systemCommands property to false.
    * systemCommands {bool}: listfjsdjf disable command list from vim and 
    other plugins and only custom commands can be displayed   

==============================================================================
LICENSE                                                        *comdrop-license*
MIT License

Copyright (c) 2020-2021 Diego Chiluisa 

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

==============================================================================
vim:tw=78:sw=4:ts=8:ft=help:norl:
